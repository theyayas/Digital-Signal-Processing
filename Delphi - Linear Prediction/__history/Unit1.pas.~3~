unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, VclTee.TeeGDIPlus, VCLTee.TeEngine,
  VCLTee.Series, Vcl.StdCtrls, Vcl.ExtCtrls, VCLTee.TeeProcs, VCLTee.Chart, math,
  Vcl.Samples.Spin;

type
  TForm1 = class(TForm)
    Chart1: TChart;
    Button1: TButton;
    Series1: TLineSeries;
    Chart2: TChart;
    Series2: TLineSeries;
    Button2: TButton;
    Label8: TLabel;
    Chart3: TChart;
    Series3: TLineSeries;
    OpenDialog1: TOpenDialog;
    SpinEdit1: TSpinEdit;
    ListBox1: TListBox;
    ListBox2: TListBox;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure SpinEdit1Change(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  input : textfile;
  N : integer;
  pcg, autocorr, sigma, alph, k, y, error : array [-200..1000000] of extended;
  alpha : array [-1..10000, -1..10000] of extended;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
  I : integer;
  buang : extended;
begin
  series1.Clear;
  if opendialog1.Execute then
  begin
       i := 0;
       assignfile(input,opendialog1.FileName);
       reset(input);
       while not EOF (input) do
       begin
          readln(input, buang, pcg[i]);
          i := i + 1;
       end;
       closefile(input);
       N := i;
  end;
  for I := 0 to N-1 do
  begin
       Series1.addxy(i,pcg[i]);
  end;
end;



procedure TForm1.Button2Click(Sender: TObject);
var
  I, J : integer;
begin
  series2.Clear;
  for I := 0 to N-1 do
  //autocorr[i] := 0;
  begin
    for J := 0 to N-1 do
    begin
      autocorr[i] := autocorr[i] + pcg[j]*pcg[j + i]/N;
    end;
    series2.AddXY(i, autocorr[i]);
  end;

end;

procedure TForm1.SpinEdit1Change(Sender: TObject);
var
  H, I, J : integer;
begin
  series3.Clear;
  listbox1.items.Clear;
  listbox2.items.Clear;

  SpinEdit1.MinValue:=0;
  SpinEdit1.MaxValue:=100;

  for i := 0 to N-1 do
    begin
     error[i] := 0;
     sigma[i] := 0;
     k[i] := 0;
     alph[i] := 0;
     error[i] := autocorr[i];
     for j := 0 to N-1 do
       begin
         alpha[i,j] := 0;
       end;
    end;



  for i := 1 to SpinEdit1.Value do
  begin
    for j := 1 to i-1 do
      begin
        sigma[i]:= sigma[i] + alpha[i-1,j]*autocorr[i-j];
      end;
    k[i]:=(autocorr[i]-sigma[i])/error[i-1];

    alpha[i][i]:= k[i];
    if i >1 then
     for h :=1  to i-1 do
      begin
       alpha[i][h]:= alpha[i-1,h]-(k[i]*alpha[i-1,i-h]);
      end;
    error[i]:=(1-sqr(k[i]))*error[i-1];
  end;

  for i := 1 to SpinEdit1.Value do
    begin
      alph[i]:= alpha[SpinEdit1.Value,i];
      ListBox1.Items.Add('Alpha ' + inttostr(i) + ' = ' + floattostr(roundto(alph[i],-2)));
      ListBox2.Items.Add('Error ' + inttostr(i) +' = '+floattostr(roundto(error[i],-2)));
    end;

  for i := 0 to n-1 do
    begin
      y[i]:= 0;
      for j := 1 to SpinEdit1.Value do
        begin
          y[i]:= y[i] + (alph[j]*pcg[i-j]);
        end;
      Series3.AddXY(i,y[i]);
    end;
end;

end.
